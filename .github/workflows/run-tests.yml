name: ML Code Tests for wyn-mlstacks
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'databricks-config/**'

env:
  DATABRICKS_HOST: https://adb-6823129695139011.11.azuredatabricks.net
  NODE_TYPE_ID: Standard_D3_v2
  
  
jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install -r test-requirements.txt
      - name: Run tests with pytest
        run: pytest
  
  integration_test:
    needs: unit_tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Generate AAD Token
        run: ./.github/workflows/scripts/generate-aad-token.sh ${{ secrets.STAGING_AZURE_SP_TENANT_ID }} ${{ secrets.STAGING_AZURE_SP_APPLICATION_ID }} ${{ secrets.STAGING_AZURE_SP_CLIENT_SECRET }}
      - name: Train model
        uses: databricks/run-notebook@v0
        id: train
        with:
          local-notebook-path: notebooks/Train.py
          git-commit: ${{ github.event.pull_request.head.sha || github.sha }}
          new-cluster-json: >
            {
              "spark_version": "11.0.x-cpu-ml-scala2.12",
              "node_type_id": "${{ env.NODE_TYPE_ID }}",
              "num_workers": 0,
              "spark_conf": {
                "spark.databricks.cluster.profile": "singleNode",
                "spark.master": "local[*, 4]"
              },
              "custom_tags": {
                "ResourceClass": "SingleNode",
                "clusterSource": "mlops-stack/0.0"
              }
            }
          access-control-list-json: >
            [
              {
                "group_name": "users",
                "permission_level": "CAN_VIEW"
              }
            ]
          run-name: wyn-mlstacks Integration Test
          notebook-params-json: >
            {
              "env": "staging",
              "test_mode": "True"
            }            
